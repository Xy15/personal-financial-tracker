# version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis_server
    networks:
      - public-network
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/users.acl:/usr/local/etc/redis/users.acl
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  mysql_db:
    image: mysql:latest
    # build:
    #   context: .
      # dockerfile: ./mysql/Dockerfile.mysql
    # container_name: mysql_db
    # env_file:
    #   - ./personal-financial-tracker-backend/.env
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - public-network
    ports:
      - "3307:3306"
    volumes:
      - ./mysql/initdb:/docker-entrypoint-initdb.d
      - ./mysql/mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    container_name: migrate_service
    # env_file:
    #   - ./personal-financial-tracker-backend/.env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE_URL: ${MYSQL_DATABASE_URL}
    command: [
      "-path", "/migrations", 
      "-database", "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(mysql-db:3306)/${MYSQL_DATABASE}?multiStatements=true", 
      "up"
    ]
    volumes:
      - ./migrations:/migrations
    networks:
      - public-network
    depends_on:
      mysql_db:
        condition: service_healthy
    restart: on-failure

  backend:
    build:
      context: ./personal-financial-tracker-backend
    container_name: backend_app
    ports:
      - "8081:8080"
    volumes:
      - ./personal-financial-tracker-backend/log:/var/log
    environment:
      MYSQL_DATABASE_URL: ${MYSQL_DATABASE_URL}
      MYSQL_DSN: ${MYSQL_DSN}
      SECRET: ${SECRET}
      HOST: ${HOST}
      API_BASE_URL: ${API_BASE_URL}
    # env_file:
    #   - ./personal-financial-tracker-backend/.env
    networks:
      - public-network
    depends_on:
      mysql_db:
        condition: service_healthy
      redis:
        condition: service_started

  frontend:
    build:
      context: ./personal-financial-tracker-frontend
    container_name: frontend_app
    environment:
      API_BASE_URL: ${API_BASE_URL}
    #   NODE_ENV: production
    # env_file:
    #   - ./personal-financial-tracker-frontend/.env
    ports:
      - 3000:3000
    networks:
      - public-network

networks:
  public-network:
    driver: bridge
